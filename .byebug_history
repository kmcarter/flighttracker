q
q'
c
exit
Flight.where(status: [0, 1, 2], created_at: created_at..Time.now).order(:created_at).limit(1).first
Flight.where(status: [0, 1, 2], created_at: created_at..Time.now).order(:created_at).limit(1)
Flight.where(status: [0, 1, 2], created_at: created_at..Time.now).order(:created_at)
Flight.where(status: [0, 1, 2], created_at: created_at..Time.now).order(created_at: :desc)
Flight.where(status: [0, 1, 2], created_at: created_at..Time.now).order(created_at: :asc)
id
Flight.where(status: [0, 1, 2], created_at: created_at..Time.now).order(:created_at)
Flight.where(status: [0, 1, 2], created_at: created_at..Time.now).order(created_at: :desc)
Flight.where(status: [0, 1, 2], created_at: created_at..Time.now).order(created_at: :asc).limit(1).offset(1)
Flight.where(status: [0, 1, 2], created_at: created_at..Time.now).order(created_at: :desc).limit(1).offset(1)
Flight.where(status: [0, 1, 2], created_at: created_at..Time.now).order(:created_at).reverse.limit(1).offset(1)
Flight.where(status: [0, 1, 2], created_at: created_at..Time.now).order(:created_at).limit(1).offset(1).reverse
Flight.where(status: [0, 1, 2], created_at: created_at..Time.now).not(id: id).order(:created_at).reverse
Flight.where(status: [0, 1, 2], created_at: created_at..Time.now, :id.nin => id).order(:created_at).reverse
Flight.where(status: [0, 1, 2], created_at: created_at..Time.now, id: !id).order(:created_at).reverse
id
flight_number
@previous_flight
